// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// TaskUpdater is an autogenerated mock type for the TaskUpdater type
type TaskUpdater struct {
	mock.Mock
}

// Update provides a mock function with given fields: ctx, id, date, title, comment, repeat
func (_m *TaskUpdater) Update(ctx context.Context, id int64, date string, title string, comment string, repeat string) error {
	ret := _m.Called(ctx, id, date, title, comment, repeat)

	if len(ret) == 0 {
		panic("no return value specified for Update")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string, string, string, string) error); ok {
		r0 = rf(ctx, id, date, title, comment, repeat)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTaskUpdater creates a new instance of TaskUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTaskUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *TaskUpdater {
	mock := &TaskUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
